{"ast":null,"code":"var _jsxFileName = \"/srv/Projects/socket-io/frontend-chat-app/src/components/ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport socket from '../utils/socket';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, ConversationHeader, Avatar, MessageList, Message, MessageInput } from '@chatscope/chat-ui-kit-react';\nimport '../styles/ChatApp.css'; // Importar o arquivo de estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  useEffect(() => {\n    socket.connect();\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    socket.on('_chat_message', data => {\n      setMessages(prevMessages => [...prevMessages, {\n        text: data.message,\n        type: 'received'\n      }]);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('_chat_message');\n      socket.disconnect();\n    };\n  }, []);\n  const sendMessage = () => {\n    if (messageInput.trim()) {\n      socket.emit('send_message', {\n        message: messageInput\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        text: messageInput,\n        type: 'sent'\n      }]);\n      setMessageInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ConversationHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"https://via.placeholder.com/150\",\n          name: \"Beto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ConversationHeader.Content, {\n          userName: \"Beto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        className: \"message-list\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n          model: {\n            message: message.text,\n            direction: message.type === 'sent' ? 'outgoing' : 'incoming'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        placeholder: \"Digite aqui\",\n        value: messageInput,\n        onChange: val => setMessageInput(val),\n        onSend: sendMessage,\n        attachButton: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatApp, \"9H1u6Xm/beLxMW2ncZN+eyAKzZk=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useEffect","useState","socket","MainContainer","ChatContainer","ConversationHeader","Avatar","MessageList","Message","MessageInput","jsxDEV","_jsxDEV","ChatApp","_s","messages","setMessages","messageInput","setMessageInput","connect","on","console","log","data","prevMessages","text","message","type","off","disconnect","sendMessage","trim","emit","children","src","name","fileName","_jsxFileName","lineNumber","columnNumber","Content","userName","className","map","index","model","direction","placeholder","value","onChange","val","onSend","attachButton","_c","$RefreshReg$"],"sources":["/srv/Projects/socket-io/frontend-chat-app/src/components/ChatApp.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport socket from '../utils/socket';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport {\n    MainContainer,\n    ChatContainer,\n    ConversationHeader,\n    Avatar,\n    MessageList,\n    Message,\n    MessageInput\n} from '@chatscope/chat-ui-kit-react';\nimport '../styles/ChatApp.css'; // Importar o arquivo de estilos\n\nconst ChatApp = () => {\n    const [messages, setMessages] = useState([]);\n    const [messageInput, setMessageInput] = useState('');\n\n    useEffect(() => {\n        socket.connect();\n\n        socket.on('connect', () => {\n            console.log('Connected to server');\n        });\n\n        socket.on('_chat_message', (data) => {\n            setMessages((prevMessages) => [...prevMessages, { text: data.message, type: 'received' }]);\n        });\n\n        return () => {\n            socket.off('connect');\n            socket.off('_chat_message');\n            socket.disconnect();\n        };\n    }, []);\n\n    const sendMessage = () => {\n        if (messageInput.trim()) {\n            socket.emit('send_message', { message: messageInput });\n            setMessages((prevMessages) => [...prevMessages, { text: messageInput, type: 'sent' }]);\n            setMessageInput('');\n        }\n    };\n\n    return (\n        <MainContainer>\n            <ChatContainer>\n                <ConversationHeader>\n                    <Avatar src=\"https://via.placeholder.com/150\" name=\"Beto\" />\n                    <ConversationHeader.Content userName=\"Beto\" />\n                </ConversationHeader>\n                <MessageList className=\"message-list\">\n                    {messages.map((message, index) => (\n                        <Message\n                            key={index}\n                            model={{\n                                message: message.text,\n                                direction: message.type === 'sent' ? 'outgoing' : 'incoming',\n                            }}\n                        />\n                    ))}\n                </MessageList>\n                <MessageInput\n                    placeholder=\"Digite aqui\"\n                    value={messageInput}\n                    onChange={(val) => setMessageInput(val)}\n                    onSend={sendMessage}\n                    attachButton={false}\n                />\n            </ChatContainer>\n        </MainContainer>\n    );\n};\n\nexport default ChatApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}